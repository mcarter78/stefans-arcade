{"version":3,"sources":["firebase.js","images/button_red.png","images/button_blue.png","images/button_green.png","images/button_yellow.png","images/button_white.png","components/ControllerLayout.js","components/GameList.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","buttonLabel","textTransform","fontWeight","fontSize","margin","ControllerLayout","props","className","gutter","style","textAlign","span","game","buttons","one","src","blueBtn","width","onClick","handleBtnClick","two","three","four","redBtn","five","six","Title","Typography","Search","Input","formLayout","labelCol","wrapperCol","GameList","useState","gameList","setGameList","modalVisible","setModalVisible","id","title","password","gameToDetail","setGameToDetail","Form","useForm","form","useEffect","firestore","collection","get","then","query","docs","_","map","data","setFieldsValue","position","marginTop","level","top","right","shape","icon","PlusOutlined","type","placeholder","onSearch","value","newGameList","filter","toLowerCase","includes","marginBottom","marginLeft","allowClear","dataSource","renderItem","Item","find","handleGameClick","visible","onCancel","footer","e","target","classList","document","querySelector","focus","name","onFinish","gameData","doc","update","gameIndex","findIndex","splice","message","success","add","resetFields","label","hidden","rules","required","Password","htmlType","Dashboard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52cdd19e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAjh52hDjsu9lM79-AIzaSyCkOnOULpNrBTnHx4l6HuVR3jGyorUh2hw\",\n    authDomain: \"stefans-arcade.firebaseapp.com\",\n    databaseURL: \"https://stefans-arcade.uswest2.firebaseio.com\",\n    projectId: \"stefans-arcade\",\n    storageBucket: \"stefans-arcade.appspot.com\",\n    messagingSenderId: \"451170804398\",\n    appId: \"1:451170804398:web:9d2d5727af056844ee833f\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","export default __webpack_public_path__ + \"static/media/button_red.b0c4f7dd.png\";","export default __webpack_public_path__ + \"static/media/button_blue.daed0bfe.png\";","export default __webpack_public_path__ + \"static/media/button_green.117f9ad4.png\";","export default __webpack_public_path__ + \"static/media/button_yellow.c112d826.png\";","export default __webpack_public_path__ + \"static/media/button_white.f2500dae.png\";","import React, { useEffect, useState } from 'react';\n\nimport { Col, Row } from 'antd';\n\nimport redBtn from '../images/button_red.png';\nimport blueBtn from '../images/button_blue.png';\nimport greenBtn from '../images/button_green.png';\nimport yellowBtn from '../images/button_yellow.png';\nimport whiteBtn from '../images/button_white.png';\n\nconst buttonLabel = {\n    textTransform: 'uppercase',\n    fontWeight: 600,\n    fontSize: '0.8rem',\n    margin: 0\n}\n\nfunction ControllerLayout(props) {\n\n    return <>\n        <div className=\"controller-layout-container\">\n            <Row gutter={[16, 16]} style={{ textAlign: 'center' }}>\n                <Col span={6}>\n                    <p style={buttonLabel}>{props.game.buttons.one}</p>\n                    <img className=\"one\" src={blueBtn} width={80} onClick={props.handleBtnClick} />\n                </Col>\n                <Col span={6}>\n                    <p style={buttonLabel}>{props.game.buttons.two}</p>\n                    <img className=\"two\" src={blueBtn} width={80} onClick={props.handleBtnClick} />\n                </Col>\n                <Col span={6}>\n                    <p style={buttonLabel}>{props.game.buttons.three}</p>\n                    <img className=\"three\" src={blueBtn} width={80} onClick={props.handleBtnClick} />\n                </Col>\n            </Row>\n            <Row gutter={[16, 16]} style={{ textAlign: 'center' }}>\n                <Col span={6}>\n                    <p style={buttonLabel}>{props.game.buttons.four}</p>\n                    <img className=\"four\" src={redBtn} width={80} onClick={props.handleBtnClick} />\n                </Col>\n                <Col span={6}>\n                    <p style={buttonLabel}>{props.game.buttons.five}</p>\n                    <img className=\"five\" src={redBtn} width={80} onClick={props.handleBtnClick} />\n                </Col>\n                <Col span={6}>\n                    <p style={buttonLabel}>{props.game.buttons.six}</p>\n                    <img className=\"six\" src={redBtn} width={80} onClick={props.handleBtnClick} />\n                </Col>\n            </Row>\n        </div>\n    </>\n}\n\nexport default ControllerLayout;","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\n\nimport { Button, Form, Input, List, message, Modal, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport firebase from '../firebase';\n\nimport ControllerLayout from './ControllerLayout';\n\nconst { Title } = Typography;\nconst { Search } = Input;\n\nconst formLayout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 19 },\n};\n\nfunction GameList() {\n    const [gameList, setGameList] = useState([]);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [gameToDetail, setGameToDetail] = useState({\n        id: '',\n        title: '',\n        password: '',\n        buttons: {\n            one: '',\n            two: '',\n            three: '',\n            four: '',\n            five: '',\n            six: ''\n        }\n    }); \n\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        firebase.firestore().collection('games').get()\n            .then(query => {\n                let docs = _.map(query.docs, game => ({ ...game.data(), id: game.id }));\n                setGameList(docs);\n            });\n    }, []);\n\n    useEffect(() => {\n        form.setFieldsValue(gameToDetail);\n    }, [gameToDetail])\n\n    function onSubmit(gameData) {\n        if (gameData.id) {\n            firebase.firestore().collection('games').doc(gameData.id).update(gameData)\n                .then(() => {\n                    let newGameList = [...gameList];\n                    const gameIndex = _.findIndex(newGameList, { id: gameData.id });\n                    newGameList.splice(gameIndex, 1, gameData);\n                    setGameList(newGameList);\n                    message.success('Game Updated');\n                });\n        } else {\n            firebase.firestore().collection('games').add(gameData)\n                .then(game => {\n                    setGameList([...gameList, { ...gameData, id: game.id }]);\n                    message.success('Game Added');\n                });\n        }\n        setModalVisible(false);\n        form.resetFields();\n    }\n\n    function handleGameClick(game) {\n        setGameToDetail(_.find(gameList, { id: game.id }));\n        setModalVisible(true);\n    }\n\n    function handleBtnClick(e) {\n        switch(e.target.classList.value) {\n            case 'one':\n                return document.querySelector('#game-form_buttons_one').focus();\n            case 'two':\n                return document.querySelector('#game-form_buttons_two').focus();\n            case 'three':\n                return document.querySelector('#game-form_buttons_three').focus();\n            case 'four':\n                return document.querySelector('#game-form_buttons_four').focus();\n            case 'five':\n                return document.querySelector('#game-form_buttons_five').focus();\n            case 'six':\n                return document.querySelector('#game-form_buttons_six').focus();\n            default:\n                return false;\n        }\n    }\n\n    function handleSearch(value) {\n        if (value) {\n            let newGameList = _.filter(gameList, game => {\n                if (game.title) {\n                    if (game.title.toLowerCase().includes(value.toLowerCase())) return game;\n                }\n            });\n            setGameList(newGameList);\n        } else {\n            firebase.firestore().collection('games').get()\n                .then(query => {\n                    let docs = _.map(query.docs, game => ({ ...game.data(), id: game.id }));\n                    setGameList(docs);\n                });\n        }\n    }\n\n    return <>\n        <div style={{ position: 'relative', width: '100%', marginTop: '2rem' }}>\n            <Title level={3}>Arcade Map</Title>\n            <Button \n                style={{\n                    position: 'absolute',\n                    top: '0',\n                    right: '1rem'\n                }}\n                shape=\"circle\"\n                icon={<PlusOutlined />}\n                type=\"primary\" \n                onClick={() => {\n                    setGameToDetail({\n                        id: '',\n                        title: '',\n                        password: '',\n                        buttons: {\n                            one: '',\n                            two: '',\n                            three: '',\n                            four: '',\n                            five: '',\n                            six: ''\n                        }\n                    });\n                    setModalVisible(true);\n                }}\n            />\n        </div>\n\n        <Search\n            placeholder=\"Search Game Title...\"\n            onSearch={handleSearch}\n            style={{ width: '100%', marginTop: '1rem', marginBottom: '1rem', marginLeft: '2rem' }}\n            allowClear\n        />\n\n        <List\n            style={{ width: '100%', marginLeft: '2rem' }}\n            dataSource={gameList}\n            renderItem={game => {\n                if (game.title) {\n                    return <List.Item\n                        onClick={() => handleGameClick(game)}\n                    >\n                        {game.title}\n                    </List.Item>\n                }\n            }}\n        />\n\n        <Modal \n            title={gameToDetail.title ? gameToDetail.title : \"Add Game\"}\n            visible={modalVisible}\n            onCancel={() => {\n                setModalVisible(false);\n                setGameToDetail({\n                    id: '',\n                    title: '',\n                    password: '',\n                    buttons: {\n                        one: '',\n                        two: '',\n                        three: '',\n                        four: '',\n                        five: '',\n                        six: ''\n                    }\n                });\n            }}\n            footer={null}\n        >\n            \n            <ControllerLayout\n                game={gameToDetail}\n                handleBtnClick={handleBtnClick}\n            />\n\n            <Form\n                form={form}\n                {...formLayout}\n                name=\"game-form\"\n                onFinish={onSubmit}\n            >\n                <Form.Item\n                    label=\"ID\"\n                    name=\"id\"\n                    hidden\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Title\"\n                    name=\"title\"\n                    rules={[{ required: true, message: 'Please input title' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input password' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Button One\"\n                    name={['buttons', 'one']}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Button Two\"\n                    name={['buttons', 'two']}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Button Three\"\n                    name={['buttons', 'three']}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Button Four\"\n                    name={['buttons', 'four']}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Button Five\"\n                    name={['buttons', 'five']}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Button Six\"\n                    name={['buttons', 'six']}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Modal>\n    </>\n}\n\nexport default GameList;","import React, { useEffect, useState } from 'react';\n\nimport GameList from './GameList';\n\nfunction Dashboard() {\n\n    return <>\n        <GameList />\n    </>\n}\n\nexport default Dashboard;","import './App.css';\nimport 'antd/dist/antd.css';\n\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n    return <>\n        <div className=\"App\">\n            <Dashboard />\n        </div>\n    </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}